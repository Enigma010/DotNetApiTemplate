services:
  api:
    image: ${DOCKER_REGISTRY-}${App}api
    build:
      context: ..
      dockerfile: Api/Api/Dockerfile
    volumes: [../Output/Log:/log]
    environment:
      MONGO_USERNAME: ${MONGO_USERNAME}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      EVENT_BUS_HOST: ${EVENT_BUS_HOST} 
      EVENT_BUS_USERNAME: ${EVENT_BUS_USERNAME}
      EVENT_BUS_PASSWORD: ${EVENT_BUS_PASSWORD}
    depends_on:
      - mongo
    networks:
      - tmpltnetwork
    extra_hosts:
    - "host.docker.internal:host-gateway"    
  mongo:
    image: ${DOCKER_REGISTRY-}${App}mongo
    build:
      context: ..
      dockerfile: DotNetApiMongoDb/Dockerfile
    restart: always
    volumes: [../Output/MongoDb/data:/data/db]
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    networks:
      - tmpltnetwork
networks:
  tmpltnetwork:     